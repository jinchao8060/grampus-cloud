server:
  port: 6120

spring:
  application:
    name: "@artifactId@"
  profiles:
    active: "@profiles.active@"
  cloud:
    nacos:
      discovery:
        server-addr: ${NACOS-HOST:grampus-register}:${NACOS-PORT:8848}
        metadata:
          management:
            context-path: /actuator
        namespace: ${NACOS-NAMESPACE:grampus-cloud}
        group: ${NACOS-GROUP:grampus-cloud-group}
      config:
        server-addr: ${spring.cloud.nacos.discovery.server-addr}
        file-extension: yml
        namespace: ${spring.cloud.nacos.discovery.namespace}
        group: ${spring.cloud.nacos.discovery.group}
        shared-configs:
          - data-id: common-config.${spring.cloud.nacos.config.file-extension}
            group: ${spring.cloud.nacos.config.group}
            refresh: true
          - data-id: gateway-routes.${spring.cloud.nacos.config.file-extension}
            group: ${spring.cloud.nacos.config.group}
            refresh: true
    sentinel:
      filter:
        url-patterns: /**
      transport:
        dashboard: ${SENTINEL-HOST:grampus-sentinel}:${SENTINEL-PORT:8826}
      eager: true
      log:
        dir: logs/${spring.application.name}-sentinel-log
        switch-pid: true
      datasource:
        ds1:
          nacos:
            server-addr: ${NACOS-HOST:grampus-register}:${NACOS-PORT:8848}
            namespace: ${spring.cloud.nacos.discovery.namespace}
            dataId: sentinel-${spring.application.name}
            groupId: sentinel-${spring.cloud.nacos.discovery.group}
            data-type: json
            rule-type: flow

seata:
  application-id: ${spring.application.name}
  tx-service-group: ${spring.application.name}-group
  config:
    type: nacos
    nacos:
      serverAddr: 127.0.0.1:8848
      group: SEATA_GROUP
      namespace: grampus-seata
  registry:
    type: nacos
    nacos:
      application: seata-server
      server-addr: 127.0.0.1:8848
      namespace: grampus-seata

feign:
  sentinel:
    enabled: true
  httpclient:
    enabled: false
  okhttp:
    enabled: true
  compression:
    request:
      enabled: true
    response:
      enabled: true
  client:
    config:
      default:
        connectTimeout: 15000
        readTimeout: 15000

mybatis:
  configuration:
    # 下划线转驼峰
    map-underscore-to-camel-case: true
  # 搜索指定包别名
  typeAliasesPackage: com.vdegree.grampus.*.entity
  # 配置mapper的扫描，找到所有的mapper.xml映射文件
  mapperLocations: classpath*:/mapper/**/*.xml

# mybatis增强配置
mapper:
  not-empty: false
  style: camelhump
  identity: MYSQL
  wrap-keyword: "`{0}`"
  safe-delete: true
  safe-update: true
  idgenerator:
    snowflake:
      workerId: 4
      dataCenterId: 8

# PageHelper分页插件
pagehelper:
  auto-dialect: true
  helper-dialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql